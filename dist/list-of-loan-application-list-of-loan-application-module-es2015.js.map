{"version":3,"sources":["webpack:///./src/app/layout/application-details/application-details.component.html","webpack:///./src/app/layout/list-of-loan-application/list-of-loan-application.component.html","webpack:///./src/app/layout/application-details/application-details-routing.module.ts","webpack:///./src/app/layout/application-details/application-details.component.scss","webpack:///./src/app/layout/application-details/application-details.component.ts","webpack:///./src/app/layout/application-details/application-details.module.ts","webpack:///./src/app/layout/list-of-loan-application/list-of-loan-application-routing.module.ts","webpack:///./src/app/layout/list-of-loan-application/list-of-loan-application.component.scss","webpack:///./src/app/layout/list-of-loan-application/list-of-loan-application.component.ts","webpack:///./src/app/layout/list-of-loan-application/list-of-loan-application.module.ts"],"names":[],"mappings":"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","file":"list-of-loan-application-list-of-loan-application-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Application Detail</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body loan-container\\\">\\n        <!-- <form (ngSubmit)=\\\"f.form.valid && submitBtn(f)\\\" #f=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate> -->\\n                <div class=\\\"loan-body p-10\\\">\\n            <form novalidate (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-md\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <!-- <label>First Name</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newLoanObj.firstName\\\" name=\\\"firstName\\\" #firsName=\\\"ngModel\\\" placeholder=\\\"Enter First Name\\\" [ngClass]=\\\"{'is-invalid': f.submitted && firstName.invalid}\\\" autocomplete=\\\"off\\\" required>\\n                      <div *ngIf=\\\"firstName.touched\\\" class=\\\"invalidInput\\\">\\n                        <div *ngIf=\\\"firstName.errors?.required\\\">FirstName is required</div>\\n                      </div> -->\\n\\n                        <div\\n                            class=\\\"form-group\\\"\\n                            [ngClass]=\\\"{\\n                                'has-danger': firstName.invalid && (firstName.dirty || firstName.touched),\\n                                'has-success': firstName.valid && (firstName.dirty || firstName.touched)\\n                            }\\\"\\n                        >\\n                            <label>First Name</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control\\\"\\n                                name=\\\"firstName\\\"\\n                                [(ngModel)]=\\\"newLoanObj.firstName\\\"\\n                                required\\n                                #firstName=\\\"ngModel\\\"\\n                                [disabled]=\\\"!isEdit\\\"\\n                            />\\n                            <div\\n                                class=\\\"list-group-item list-group-item-danger\\\"\\n                                *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\"\\n                            >\\n                                <p *ngIf=\\\"firstName.errors.required\\\">First name is required</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <div\\n                            class=\\\"form-group\\\"\\n                            [ngClass]=\\\"{\\n                                'has-danger': lastName.invalid && (lastName.dirty || lastName.touched),\\n                                'has-success': lastName.valid && (lastName.dirty || lastName.touched)\\n                            }\\\"\\n                        >\\n                            <label>Last Name</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control\\\"\\n                                name=\\\"lastName\\\"\\n                                [(ngModel)]=\\\"newLoanObj.lastName\\\"\\n                                required\\n                                #lastName=\\\"ngModel\\\"\\n                                [disabled]=\\\"!isEdit\\\"\\n                            />\\n                            <div class=\\\"list-group-item list-group-item-danger\\\" *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\">\\n                                <p *ngIf=\\\"lastName.errors.required\\\">Last name is required</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': ssn.invalid && (ssn.dirty || ssn.touched),\\n                            'has-success': ssn.valid && (ssn.dirty || ssn.touched)\\n                        }\\\"\\n                    >\\n                        <label>SSN</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ssn\\\" [(ngModel)]=\\\"newLoanObj.SSN\\\" required #ssn=\\\"ngModel\\\" [disabled]=\\\"!isEdit\\\"/>\\n                        <div class=\\\"list-group-item list-group-item-danger\\\" *ngIf=\\\"ssn.errors && (ssn.dirty || ssn.touched)\\\">\\n                            <p *ngIf=\\\"ssn.errors.required\\\">SSN is required</p>\\n                        </div>\\n                    </div>\\n\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': age.invalid && (age.dirty || age.touched),\\n                            'has-success': age.valid && (age.dirty || age.touched)\\n                        }\\\"\\n                    >\\n                        <label>Age</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"age\\\" [(ngModel)]=\\\"newLoanObj.age\\\" required #age=\\\"ngModel\\\" [disabled]=\\\"!isEdit\\\"/>\\n                        <div class=\\\"list-group-item list-group-item-danger\\\" *ngIf=\\\"age.errors && (age.dirty || age.touched)\\\">\\n                            <p *ngIf=\\\"age.errors.required\\\">Age is required</p>\\n                        </div>\\n                    </div>\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': address.invalid && (address.dirty || address.touched),\\n                            'has-success': address.valid && (address.dirty || address.touched)\\n                        }\\\"\\n                    >\\n                        <label>Address</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"newLoanObj.address\\\" required #address=\\\"ngModel\\\" [disabled]=\\\"!isEdit\\\"/>\\n                        <div class=\\\"list-group-item list-group-item-danger\\\" *ngIf=\\\"address.errors && (address.dirty || address.touched)\\\">\\n                            <p *ngIf=\\\"address.errors.required\\\">Address is required</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-md\\\">\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': income.invalid && (income.dirty || income.touched),\\n                            'has-success': income.valid && (income.dirty || income.touched)\\n                        }\\\"\\n                    >\\n                        <label>Income</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"income\\\" [(ngModel)]=\\\"newLoanObj.income\\\" required #income=\\\"ngModel\\\" [disabled]=\\\"!isEdit\\\"/>\\n                        <div class=\\\"list-group-item list-group-item-danger\\\" *ngIf=\\\"income.errors && (income.dirty || income.touched)\\\">\\n                            <p *ngIf=\\\"income.errors.required\\\">Income is required</p>\\n                        </div>\\n                    </div>\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': income.invalid && (income.dirty || income.touched),\\n                            'has-success': income.valid && (income.dirty || income.touched)\\n                        }\\\"\\n                    >\\n                        <label>Loan Amount</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control\\\"\\n                            name=\\\"loanAmount\\\"\\n                            [(ngModel)]=\\\"newLoanObj.loanAmount\\\"\\n                            required\\n                            #loanAmount=\\\"ngModel\\\"\\n                            [disabled]=\\\"!isEdit\\\"\\n                        />\\n                        <div\\n                            class=\\\"list-group-item list-group-item-danger\\\"\\n                            *ngIf=\\\"loanAmount.errors && (loanAmount.dirty || loanAmount.touched)\\\"\\n                        >\\n                            <p *ngIf=\\\"loanAmount.errors.required\\\">Loan amount is required</p>\\n                        </div>\\n                    </div>\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': creditScore.invalid && (creditScore.dirty || creditScore.touched),\\n                            'has-success': creditScore.valid && (creditScore.dirty || creditScore.touched)\\n                        }\\\"\\n                    >\\n                        <label>Credit Score</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control\\\"\\n                            name=\\\"creditScore\\\"\\n                            [(ngModel)]=\\\"newLoanObj.creditScore\\\"\\n                            required\\n                            #creditScore=\\\"ngModel\\\"\\n                            [disabled]=\\\"!isEdit\\\"\\n                        />\\n                        <div\\n                            class=\\\"list-group-item list-group-item-danger\\\"\\n                            *ngIf=\\\"creditScore.errors && (creditScore.dirty || creditScore.touched)\\\"\\n                        >\\n                            <p *ngIf=\\\"creditScore.errors.required\\\">Credit Score is required</p>\\n                        </div>\\n                    </div>\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': creditScore.invalid && (creditScore.dirty || creditScore.touched),\\n                            'has-success': creditScore.valid && (creditScore.dirty || creditScore.touched)\\n                        }\\\"\\n                    >\\n                        <label>Email</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"newLoanObj.email\\\" required #email=\\\"ngModel\\\" [disabled]=\\\"!isEdit\\\"/>\\n                        <div class=\\\"list-group-item list-group-item-danger\\\" *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\">\\n                            <p *ngIf=\\\"creditScore.errors.required\\\">Email is required</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"closeModal()\\\">Close</button>\\n    </div>\\n\"","module.exports = \"<div class=\\\"loan-container\\\">\\n  <div class=\\\"loan-title\\\">List of applications</div>\\n  <div class=\\\"loan-body\\\">\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">User Id</th>\\n          <th scope=\\\"col\\\">Name</th>\\n          <th scope=\\\"col\\\">Loan Amount</th>\\n          <th scope=\\\"col\\\">Credit Score</th>\\n          <th scope=\\\"col\\\">Email</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let loanApp of getLoanApp\\\" (click)=\\\"rowClicked(loanApp)\\\">\\n          <th scope=\\\"row\\\">{{ loanApp.userId }}</th>\\n          <td>\\n            {{ loanApp.firstName + ' ' + loanApp.lastName }}\\n          </td>\\n          <td>{{ loanApp.loanAmount}}</td>\\n          <td>{{ loanApp.creditScore }}</td>\\n          <td\\n            [ngClass]=\\\"{'text-success': loanApp.status == 'Approved', 'text-warning': loanApp.status == 'In Review', 'text-danger': loanApp.status == 'Declined'}\\\">\\n            {{ loanApp.email }}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div class=\\\"d-flex justify-content-between p-2\\\">\\n      <!-- <ngb-pagination [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\">\\n  </ngb-pagination> -->\\n\\n      <select class=\\\"custom-select\\\" style=\\\"width: auto\\\" [(ngModel)]=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"2\\\">2 items per page</option>\\n        <option [ngValue]=\\\"4\\\">4 items per page</option>\\n        <option [ngValue]=\\\"6\\\">6 items per page</option>\\n      </select>\\n    </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ApplicationDetailsComponent } from './application-details.component';\n\nconst routes: Routes = [\n    {path: '', component: ApplicationDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApplicationDetailsRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hcHBsaWNhdGlvbi1kZXRhaWxzL2FwcGxpY2F0aW9uLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, TemplateRef, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NewLoan } from 'src/app/shared/models/new-loan';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-application-details',\n    templateUrl: './application-details.component.html',\n    styleUrls: ['./application-details.component.scss'],\n    providers: []\n})\nexport class ApplicationDetailsComponent implements OnInit {\n    @Input() public loanDetail;\n    @Output() passEntry: EventEmitter<any> = new EventEmitter();\n\n    loanForm: FormGroup;\n    decisonResponse: {};\n    isEdit: boolean;\n    constructor(public modalService: NgbModal, public newLoanObj: NewLoan, private httpService: HttpService, private router: Router) {\n        //this.newLoanObj.firstName = \"\";\n        this.newLoanObj.userId = 'test123';\n        this.loanForm = new FormGroup({\n            firstName: new FormControl('')\n        });\n    }\n\n    ngOnInit() {\n        console.log(this.loanDetail);\n        this.newLoanObj.firstName = this.loanDetail.firstName;\n        this.newLoanObj.lastName = this.loanDetail.lastName;\n        this.newLoanObj.address = this.loanDetail.address;\n        this.newLoanObj.SSN = this.loanDetail.socialSecurityNumber;\n        this.newLoanObj.income = this.loanDetail.income;\n        this.newLoanObj.creditScore = this.loanDetail.creditScore;\n        this.newLoanObj.loanAmount = this.loanDetail.loanAmount;\n        this.newLoanObj.email = this.loanDetail.email;\n    }\n    openModal(content) {\n        this.modalService.open(content);\n    }\n    closeModal() {\n        this.modalService.dismissAll();\n        this.passEntry.emit(this.loanDetail);\n    }\n\n    onSubmit(form) {\n        if (form.valid) {\n            this.httpService.getDecision(this.newLoanObj).subscribe(\n                data => {\n                    console.log('Loan Approval Response', data);\n                    this.decisonResponse = data;\n                    this.router.navigate(['loanstatus'], { queryParams: { data: this.decisonResponse } });\n                },\n                error => console.log('Error:', error)\n            );\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApplicationDetailsRoutingModule } from './application-details-routing.module';\nimport { ApplicationDetailsComponent } from './application-details.component';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalModule } from 'ngx-bootstrap/modal/';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n      ApplicationDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    NgbModalModule,\n    ApplicationDetailsRoutingModule,\n    FormsModule,\n    ModalModule.forRoot()\n  ],\n  exports: [\n    ApplicationDetailsComponent\n  ]\n})\nexport class ApplicationDetailsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListOfLoanApplicationComponent } from './list-of-loan-application.component';\n\nconst routes: Routes = [\n  {path: '', component: ListOfLoanApplicationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListOfLoanApplicationRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9saXN0LW9mLWxvYW4tYXBwbGljYXRpb24vbGlzdC1vZi1sb2FuLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ApplicationDetailsComponent } from '../application-details/application-details.component';\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpService } from 'src/app/shared/services/http.service';\n\ninterface LoanApplication {\n    id?: string;\n    name: string;\n    loanamount: string;\n    apr: string;\n    status: string;\n}\n\nlet LOANAPPLICATIONS: LoanApplication[] = [\n    {\n        id: 'LN6001',\n        name: 'David Gray',\n        loanamount: '20000 USD',\n        apr: '5.2%',\n        status: 'Approved'\n    },\n    {\n        id: 'LN6010',\n        name: 'David Gray',\n        loanamount: '2500 USD',\n        apr: 'N/A',\n        status: 'In Review'\n    },\n    {\n        id: 'LN6025',\n        name: 'David Gray',\n        loanamount: '8000 USD',\n        apr: 'N/A',\n        status: 'Declined'\n    },\n    {\n        id: 'LN6032',\n        name: 'David Gray',\n        loanamount: '6000 USD',\n        apr: '3.2%',\n        status: 'Approved'\n    },\n    {\n        id: 'LN6041',\n        name: 'David Gray',\n        loanamount: '50000 USD',\n        apr: '3.2%',\n        status: 'Approved'\n    }\n];\n\n@Component({\n    selector: 'app-list-of-loan-application',\n    templateUrl: './list-of-loan-application.component.html',\n    styleUrls: ['./list-of-loan-application.component.scss']\n})\nexport class ListOfLoanApplicationComponent implements OnInit {\n    page = 1;\n    pageSize = 4;\n    collectionSize = LOANAPPLICATIONS.length;\n    loanApplications = [];\n\n    constructor(config: NgbModalConfig, private modalService: NgbModal, private httpService: HttpService) {\n        this.getAllLoanApplication(\"test123\");\n    }\n\n    ngOnInit() {}\n\n    get getLoanApp(): LoanApplication[] {\n        return this.loanApplications.map((loanapp, i) => ({ id: '' + i + 1, ...loanapp })).slice(\n            (this.page - 1) * this.pageSize,\n            (this.page - 1) * this.pageSize + this.pageSize\n        );\n    }\n\n    getAllLoanApplication(inputParam) {\n        this.httpService.getAllLoanApplicationsForUser(inputParam).subscribe(\n            data => {\n                console.log('Loan Application Response', data);\n                this.loanApplications = data;\n            },\n            error => console.log('Error:', error)\n        );\n    }\n\n    rowClicked(rowData) {\n        const modalRef = this.modalService.open(ApplicationDetailsComponent, { size: 'lg' });\n        modalRef.componentInstance.loanDetail = rowData;\n        modalRef.result.then((data: any) => {}, (reason: any) => {});\n        modalRef.componentInstance.passEntry.subscribe((receivedEntry) => {\n            console.log(receivedEntry);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListOfLoanApplicationRoutingModule } from './list-of-loan-application-routing.module';\nimport { ListOfLoanApplicationComponent } from './list-of-loan-application.component';\nimport { FormsModule } from '@angular/forms';\nimport { ApplicationDetailsComponent } from '../application-details/application-details.component';\nimport { ApplicationDetailsModule } from '../application-details/application-details.module';\n\n@NgModule({\n  declarations: [\n    ListOfLoanApplicationComponent\n  ],\n  imports: [\n    CommonModule,\n    ListOfLoanApplicationRoutingModule,\n    FormsModule,\n    ApplicationDetailsModule\n  ],\n  exports: [\n    FormsModule,\n    ApplicationDetailsComponent\n  ],\n  entryComponents: [\n    ApplicationDetailsComponent\n  ]\n})\nexport class ListOfLoanApplicationModule { }\n"],"sourceRoot":""}