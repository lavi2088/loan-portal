{"version":3,"sources":["webpack:///./src/app/layout/loanOfficer/all-applications/all-applications.component.html","webpack:///./src/app/layout/loanOfficer/loan-application-detail/loan-application-detail.component.html","webpack:///./src/app/layout/loanOfficer/all-applications/all-applications-routing.module.ts","webpack:///./src/app/layout/loanOfficer/all-applications/all-applications.component.scss","webpack:///./src/app/layout/loanOfficer/all-applications/all-applications.component.ts","webpack:///./src/app/layout/loanOfficer/all-applications/all-applications.module.ts","webpack:///./src/app/layout/loanOfficer/loan-application-detail/loan-application-detail-routing.module.ts","webpack:///./src/app/layout/loanOfficer/loan-application-detail/loan-application-detail.component.scss","webpack:///./src/app/layout/loanOfficer/loan-application-detail/loan-application-detail.component.ts","webpack:///./src/app/layout/loanOfficer/loan-application-detail/loan-application-detail.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,glBAAglB,kBAAkB,iCAAiC,8CAA8C,+BAA+B,qBAAqB,qBAAqB,uBAAuB,2CAA2C,yIAAyI,iBAAiB,kBAAkB,0hB;;;;;;;;;;;ACAx+B,6OAA6O,o2CAAo2C,mOAAmO,02BAA02B,yLAAyL,u/IAAu/I,wHAAwH,sJAAsJ,wS;;;;;;;;;;;;;;;;;;;ACAnjP;AACc;AACiB;AAExE,MAAM,MAAM,GAAW;IACnB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oFAAwB,EAAC;CAClD,CAAC;AAMF,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAI;AAAhC,4BAA4B;IAJxC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,4BAA4B,CAAI;AAAJ;;;;;;;;;;;;ACZzC,+DAA+D,mM;;;;;;;;;;;;;;;;;;;;ACAb;AACiB;AACG;AACwC;AAO9G,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAKjC,YAAqB,WAAwB,EAAE,MAAsB,EAAU,YAAsB;QAAhF,gBAAW,GAAX,WAAW,CAAa;QAAkC,iBAAY,GAAZ,YAAY,CAAU;QAJrG,SAAI,GAAG,CAAC,CAAC;QACT,aAAQ,GAAG,CAAC,CAAC;QACb,qBAAgB,GAAG,EAAE,CAAC;QACtB,mBAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAE1C,IAAI,CAAC,qBAAqB,CAAC,EAAC,mBAAmB,EAAE,cAAc,EAAC,CAAC,CAAC;IACtE,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,qBAAqB,CAAC,UAAU;QAC5B,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAEjC,CAAC,EAAC,KAAK,GAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,UAAU,CAAC,OAAO;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,yHAA8B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACxF,QAAQ,CAAC,iBAAiB,CAAC,UAAU,GAAG,OAAO,CAAC;QAChD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,GAAE,CAAC,EAAE,CAAC,MAAW,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC;QAC7D,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,EAAE;YAC7D,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,aAAa,CAAC,CAAC;YAC5C,IAAG,aAAa,KAAK,SAAS,EAAE;gBAC5B,IAAI,CAAC,qBAAqB,CAAC,EAAC,mBAAmB,EAAE,cAAc,EAAC,CAAC,CAAC;aACrE;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;YAxBqC,gFAAW;YAAU,yEAAc;YAAwB,mEAAQ;;AAL5F,wBAAwB;IALpC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,qMAAgD;;KAEnD,CAAC;2EAMoC,gFAAW,EAAU,yEAAc,EAAwB,mEAAQ;GAL5F,wBAAwB,CA6BpC;AA7BoC;;;;;;;;;;;;;;;;;;;;;;;;ACVI;AACM;AAEkC;AACT;AAC3B;AACiE;AACN;AAiBxG,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAI;AAAzB,qBAAqB;IAfjC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oFAAwB,CAAC;QACxC,OAAO,EAAE;YACP,4DAAY;YACZ,6FAA4B;YAC5B,0DAAW;YACX,mHAA2B;SAC5B;QACD,OAAO,EAAE;YACP,0DAAW;SACZ;QACD,eAAe,EAAE;YACf,yHAA8B;SAC/B;KACF,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACxBO;AACc;AAC8B;AAErF,MAAM,MAAM,GAAW;IACnB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iGAA8B,EAAC;CACxD,CAAC;AAMF,IAAa,kCAAkC,GAA/C,MAAa,kCAAkC;CAAI;AAAtC,kCAAkC;IAJ9C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,kCAAkC,CAAI;AAAJ;;;;;;;;;;;;ACZ/C,+DAA+D,mN;;;;;;;;;;;;;;;;;;;;;;;ACAgB;AACzB;AACE;AACC;AACU;AAC1B;AACE;AAE3C,MAAM,YAAY;CAQjB;AAMD,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAQvC,YAAmB,YAAsB,EAAS,UAAmB,EAAU,WAAwB,EAAU,MAAc;QAA5G,iBAAY,GAAZ,YAAY,CAAU;QAAS,eAAU,GAAV,UAAU,CAAS;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANrH,cAAS,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAOxD,iCAAiC;QACjC,qCAAqC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC1B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IAElD,CAAC;IACD,SAAS,CAAC,OAAO;QACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IACD,UAAU;QACN,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,IAAI,EAAE,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACpC,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,OAAO,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG,kEAAU,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YAC/E,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAEtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/C;IACL,CAAC;IACD,iBAAiB;QACT,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,OAAO,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,OAAO,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG,kEAAU,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QAEtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IACD,mBAAmB,CAAC,KAAK;QACrB,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9D,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;CACJ;;YA/DoC,mEAAQ;YAAqB,sEAAO;YAAuB,gFAAW;YAAkB,sDAAM;;AAPtH;IAAR,2DAAK,EAAE;;kEAAmB;AACjB;IAAT,4DAAM,EAAE;oEAAY,0DAAY;iEAA2B;AAFnD,8BAA8B;IAL1C,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,0NAAuD;;KAE1D,CAAC;2EASmC,mEAAQ,EAAqB,sEAAO,EAAuB,gFAAW,EAAkB,sDAAM;GARtH,8BAA8B,CAuE1C;AAvE0C;;;;;;;;;;;;;;;;;;;;;;;;ACtBF;AACM;AAE+C;AACT;AACnC;AACU;AACf;AAkB7C,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAI;AAA/B,2BAA2B;IAhBvC,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iGAA8B;SAC/B;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,yEAAc;YACd,0GAAkC;YAClC,+DAAW,CAAC,OAAO,EAAE;SACtB;QACD,OAAO,EAAE;YACP,0DAAW;YACX,iGAA8B;SAC/B;KACF,CAAC;GACW,2BAA2B,CAAI;AAAJ","file":"loanOfficer-all-applications-all-applications-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"loan-container\\\">\\n  <div class=\\\"loan-title\\\">List of applications</div>\\n    <div class=\\\"loan-body\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Case Id</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Loan Amount</th>\\n        <th scope=\\\"col\\\">Credit Score</th>\\n        <th scope=\\\"col\\\">Income</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let loanApp of loanApplications\\\" (click)=\\\"rowClicked(loanApp)\\\">\\n        <th scope=\\\"row\\\">{{ loanApp.userId }}</th>\\n        <td>\\n          {{ loanApp.firstName + ' ' + loanApp.lastName }}\\n        </td>\\n        <td>{{ loanApp.loanAmount}}</td>\\n        <td>{{ loanApp.creditScore }}</td>\\n        <td\\n          [ngClass]=\\\"{'text-success': loanApp.status == 'Approved', 'text-warning': loanApp.status == 'In Review', 'text-danger': loanApp.status == 'Declined'}\\\">\\n          {{ loanApp.income }}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <div class=\\\"d-flex justify-content-between p-2\\\">\\n    <!-- <ngb-pagination [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\">\\n  </ngb-pagination> -->\\n\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto\\\" [(ngModel)]=\\\"pageSize\\\">\\n      <option [ngValue]=\\\"2\\\">2 items per page</option>\\n      <option [ngValue]=\\\"4\\\">4 items per page</option>\\n      <option [ngValue]=\\\"6\\\">6 items per page</option>\\n    </select>\\n  </div>\\n</div>\\n</div>\\n</div>\"","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Application Detail</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\\n<div class=\\\"modal-body loan-container\\\">\\n    <!-- <form (ngSubmit)=\\\"f.form.valid && submitBtn(f)\\\" #f=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate> -->\\n            <div class=\\\"loan-body p-10\\\">\\n        <form novalidate (ngSubmit)=\\\"onSubmit(f, $event)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12 col-md\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>First Name</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control\\\"\\n                            name=\\\"firstName\\\"\\n                            [(ngModel)]=\\\"newLoanObj.firstName\\\"\\n                            required\\n                            #firstName=\\\"ngModel\\\"\\n                            [disabled]=\\\"1\\\"\\n                        />\\n                        <div class=\\\"text-danger\\\" *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\">\\n                            <p *ngIf=\\\"firstName.errors.required\\\">First name is required</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div\\n                        class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{\\n                            'has-danger': lastName.invalid && (lastName.dirty || lastName.touched),\\n                            'has-success': lastName.valid && (lastName.dirty || lastName.touched)\\n                        }\\\"\\n                    >\\n                        <label>Last Name</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control\\\"\\n                            name=\\\"lastName\\\"\\n                            [(ngModel)]=\\\"newLoanObj.lastName\\\"\\n                            required\\n                            #lastName=\\\"ngModel\\\"\\n                            [disabled]=\\\"1\\\"\\n                        />\\n                        <div class=\\\"text-danger\\\" *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\">\\n                            <p *ngIf=\\\"lastName.errors.required\\\">Last name is required</p>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div\\n                    class=\\\"form-group\\\"\\n                    [ngClass]=\\\"{\\n                        'has-danger': ssn.invalid && (ssn.dirty || ssn.touched),\\n                        'has-success': ssn.valid && (ssn.dirty || ssn.touched)\\n                    }\\\"\\n                >\\n                    <label>SSN</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"ssn\\\"\\n                        [(ngModel)]=\\\"newLoanObj.SSN\\\"\\n                        required\\n                        #ssn=\\\"ngModel\\\"\\n                        [disabled]=\\\"1\\\"\\n                    />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"ssn.errors && (ssn.dirty || ssn.touched)\\\">\\n                        <p *ngIf=\\\"ssn.errors.required\\\">SSN is required</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Income</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"income\\\"\\n                        [(ngModel)]=\\\"newLoanObj.income\\\"\\n                        required\\n                        #income=\\\"ngModel\\\"\\n                        [disabled]=\\\"1\\\"\\n                    />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"income.errors && (income.dirty || income.touched)\\\">\\n                        <p *ngIf=\\\"income.errors.required\\\">Income is required</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Credit Score</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"creditScore\\\"\\n                        [(ngModel)]=\\\"newLoanObj.creditScore\\\"\\n                        required\\n                        #creditScore=\\\"ngModel\\\"\\n                        [disabled]=\\\"1\\\"\\n                    />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"creditScore.errors && (creditScore.dirty || creditScore.touched)\\\">\\n                        <p *ngIf=\\\"creditScore.errors.required\\\">Credit Score is required</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-md\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Email</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"email\\\"\\n                        [(ngModel)]=\\\"newLoanObj.email\\\"\\n                        required\\n                        #email=\\\"ngModel\\\"\\n                        [disabled]=\\\"!isEdit\\\"\\n                    />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\">\\n                        <p *ngIf=\\\"creditScore.errors.required\\\">Email is required</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Loan Amount</label>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"loanAmount\\\"\\n                        [(ngModel)]=\\\"newLoanObj.loanAmount\\\"\\n                        required\\n                        #loanAmount=\\\"ngModel\\\"\\n                        [disabled]=\\\"!isEdit\\\"\\n                    />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"loanAmount.errors && (loanAmount.dirty || loanAmount.touched)\\\">\\n                        <p *ngIf=\\\"loanAmount.errors.required\\\">Loan amount is required</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Apr</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"apr\\\" [(ngModel)]=\\\"newLoanObj.apr\\\" #apr=\\\"ngModel\\\" required />\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"apr.errors && (apr.dirty || apr.touched)\\\">\\n                        <p *ngIf=\\\"apr.errors.required\\\">Apr is required</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Comments</label>\\n                    <textarea\\n                        class=\\\"form-control\\\"\\n                        name=\\\"comments\\\"\\n                        [(ngModel)]=\\\"newLoanObj.comments\\\"\\n                        #comments=\\\"ngModel\\\"\\n                        rows=\\\"3\\\"\\n                    ></textarea>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"isEdit = !isEdit\\\">Edit</button> &nbsp;\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid\\\">Approve</button> &nbsp;\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"rejectApplication()\\\" [disabled]=\\\"f.invalid\\\">Reject</button> &nbsp;\\n                    <button class=\\\"btn btn-danger\\\">Reset</button>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"closeModal()\\\">Close</button>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllApplicationsComponent } from './all-applications.component';\n\nconst routes: Routes = [\n    {path: '', component: AllApplicationsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AllApplicationsRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9sb2FuT2ZmaWNlci9hbGwtYXBwbGljYXRpb25zL2FsbC1hcHBsaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { LoanApplicationDetailComponent } from '../loan-application-detail/loan-application-detail.component';\n\n@Component({\n    selector: 'app-all-applications',\n    templateUrl: './all-applications.component.html',\n    styleUrls: ['./all-applications.component.scss']\n})\nexport class AllApplicationsComponent implements OnInit {\n    page = 1;\n    pageSize = 4;\n    loanApplications = [];\n    collectionSize = this.loanApplications.length;\n    constructor( private httpService: HttpService, config: NgbModalConfig, private modalService: NgbModal) {\n        this.getAllLoanApplication({\"processDefinition\": \"loanApproval\"});\n    }\n\n    ngOnInit() {}\n\n    getAllLoanApplication(inputParam) {\n        this.httpService.getAllLoanApplications(inputParam).subscribe(data => {\n            console.log(\"Loan Application Response\", data);\n            this.loanApplications = data;\n\n        },error=> console.log('Error:',error));\n    }\n    rowClicked(rowData) {\n        const modalRef = this.modalService.open(LoanApplicationDetailComponent, { size: 'lg' });\n        modalRef.componentInstance.loanDetail = rowData;\n        modalRef.result.then((data: any) => {}, (reason: any) => {});\n        modalRef.componentInstance.passEntry.subscribe((receivedEntry) => {\n            console.log(\"Data Received:\",receivedEntry);\n            if(receivedEntry === \"REFRESH\") {\n                this.getAllLoanApplication({\"processDefinition\": \"loanApproval\"});\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AllApplicationsRoutingModule } from './all-applications-routing.module';\nimport { AllApplicationsComponent } from './all-applications.component';\nimport { FormsModule } from '@angular/forms';\nimport { LoanApplicationDetailComponent } from '../loan-application-detail/loan-application-detail.component';\nimport { LoanApplicationDetailModule } from '../loan-application-detail/loan-application-detail.module';\n\n@NgModule({\n  declarations: [AllApplicationsComponent],\n  imports: [\n    CommonModule,\n    AllApplicationsRoutingModule,\n    FormsModule,\n    LoanApplicationDetailModule\n  ],\n  exports: [\n    FormsModule\n  ],\n  entryComponents: [\n    LoanApplicationDetailComponent\n  ]\n})\nexport class AllApplicationsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoanApplicationDetailComponent } from './loan-application-detail.component';\n\nconst routes: Routes = [\n    {path: '', component: LoanApplicationDetailComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoanApplicationDetailRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9sb2FuT2ZmaWNlci9sb2FuLWFwcGxpY2F0aW9uLWRldGFpbC9sb2FuLWFwcGxpY2F0aW9uLWRldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NewLoan } from 'src/app/shared/models/new-loan';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { Router } from '@angular/router';\nimport {formatDate} from '@angular/common';\n\nclass CompleteTask {\n    taskId: string;\n    approved: string;\n    apr: string;\n    approvedBy: string;\n    approvedOn: string;\n    loanAmount: string;\n    comments: string;\n}\n@Component({\n    selector: 'app-loan-application-detail',\n    templateUrl: './loan-application-detail.component.html',\n    styleUrls: ['./loan-application-detail.component.scss']\n})\nexport class LoanApplicationDetailComponent implements OnInit {\n    @Input() public loanDetail;\n    @Output() passEntry: EventEmitter<any> = new EventEmitter();\n\n    loanForm: FormGroup;\n    decisonResponse: {};\n    completeTask: CompleteTask;\n    isEdit: boolean;\n    constructor(public modalService: NgbModal, public newLoanObj: NewLoan, private httpService: HttpService, private router: Router) {\n        //this.newLoanObj.firstName = \"\";\n        //this.newLoanObj.userId = 'test123';\n        this.loanForm = new FormGroup({\n            firstName: new FormControl('')\n        });\n        this.newLoanObj.apr = '';\n        this.newLoanObj.comments = '';\n    }\n\n    ngOnInit() {\n        console.log(this.loanDetail);\n        this.newLoanObj.firstName = this.loanDetail.firstName;\n        this.newLoanObj.lastName = this.loanDetail.lastName;\n        this.newLoanObj.address = this.loanDetail.address;\n        this.newLoanObj.SSN = this.loanDetail.socialSecurityNumber;\n        this.newLoanObj.income = this.loanDetail.income;\n        this.newLoanObj.creditScore = this.loanDetail.creditScore;\n        this.newLoanObj.loanAmount = this.loanDetail.loanAmount;\n        this.newLoanObj.email = this.loanDetail.email;\n\n    }\n    openModal(content) {\n        this.modalService.open(content);\n    }\n    closeModal() {\n        this.modalService.dismissAll();\n    }\n\n    onSubmit(form, event) {\n        console.log('form:::', form, event);\n        if (form.valid) {\n            this.completeTask = new CompleteTask();\n            this.completeTask.taskId = this.loanDetail.processInstanceId;\n            this.completeTask.approved = 'true';\n            this.completeTask.apr = this.newLoanObj.apr;\n            this.completeTask.approvedBy = 'lurie';\n            this.completeTask.approvedOn = '' + formatDate(new Date(), 'yyyy/MM/dd', 'en');\n            this.completeTask.loanAmount = this.newLoanObj.loanAmount;\n            this.completeTask.comments = this.newLoanObj.comments;\n\n            this.completeApplication(this.completeTask);\n        }\n    }\n    rejectApplication() {\n            this.completeTask = new CompleteTask();\n            this.completeTask.taskId = this.loanDetail.processInstanceId;\n            this.completeTask.approved = 'false';\n            this.completeTask.apr = this.newLoanObj.apr;\n            this.completeTask.approvedBy = 'lurie';\n            this.completeTask.approvedOn = '' + formatDate(new Date(), 'yyyy/MM/dd', 'en');\n            this.completeTask.loanAmount = this.newLoanObj.loanAmount;\n            this.completeTask.comments = this.newLoanObj.comments;\n\n            this.completeApplication(this.completeTask);\n    }\n    completeApplication(input) {\n        this.httpService.completeLoanApplications(input).subscribe(data => {\n            console.log('Data', data);\n            this.passEntry.emit('REFRESH');\n            this.closeModal();\n        }, error => console.log(error));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoanApplicationDetailRoutingModule } from './loan-application-detail-routing.module';\nimport { LoanApplicationDetailComponent } from './loan-application-detail.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoanApplicationDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModalModule,\n    LoanApplicationDetailRoutingModule,\n    ModalModule.forRoot()\n  ],\n  exports: [\n    FormsModule,\n    LoanApplicationDetailComponent\n  ]\n})\nexport class LoanApplicationDetailModule { }\n"],"sourceRoot":""}